<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_305439_digital_m_flow_settings</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_305439_digital_m_flow_settings">credentials_srv_1VALCHANGES^ORpassword_srv_1VALCHANGES^EQ<item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Upload credentials to CG</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// abbort the action if credentials are missing
	if(current.credentials_srv_1 == "" || current.password_srv_1 == ""){
		gs.addErrorMessage("Server credentials may not be empty");
		current.setAbortAction(true);
		return;
	}
	
	// search the uploaded credentials into system attachment's table
	gs.info("credentials id: " + current.credentials_srv_1);
	
	var g_record = new GlideRecord("sys_attachment");
	g_record.addQuery("sys_id", current.credentials_srv_1);
	g_record.query();
	
	var passwd = current.password_srv_1.getDecryptedValue();
	var content;
	var file_name;
	
	// get the file content and name
	try {
		if (g_record.next()){
			file_name = g_record.file_name;
			var attachment  = new GlideSysAttachment();
			content = attachment.getContentBase64(g_record);
		}
	} catch (err){
		gs.error(err.message);
	}
	
	try {
		// upload the certificate
		var utils = new CommProfiles();
		var isUploaded = utils.uploadCredentials(content, file_name, passwd, "application");
		if(!isUploaded){
			gs.addErrorMessage("Cannot create security profile on Central Governance.");
			current.setAbortAction(true);
		}
	} catch (e){
		gs.error(e.message);
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-03 10:54:04</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>ef0d374a4f6073002f86b5e18110c7ef</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Upload credentials to CG</sys_name>
        <sys_overrides/>
        <sys_package display_value="digital-mft" source="x_305439_digital_m">3006e9b44f2323002f86b5e18110c7cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="digital-mft">3006e9b44f2323002f86b5e18110c7cd</sys_scope>
        <sys_update_name>sys_script_ef0d374a4f6073002f86b5e18110c7ef</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-04-18 11:37:41</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=ef0d374a4f6073002f86b5e18110c7ef"/>
</record_update>
