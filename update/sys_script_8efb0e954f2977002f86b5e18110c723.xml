<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>ecc_queue</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="ecc_queue">queue=input^state=ready^agent_correlatorSTARTSWITHCreate SSH Key^ORagent_correlatorSTARTSWITHGet SSH Key^EQ<item endquery="false" field="queue" goto="false" newquery="false" operator="=" or="false" value="input"/>
            <item endquery="false" field="state" goto="false" newquery="false" operator="=" or="false" value="ready"/>
            <item endquery="false" field="agent_correlator" goto="false" newquery="false" operator="STARTSWITH" or="false" value="Create SSH Key"/>
            <item endquery="false" field="agent_correlator" goto="false" newquery="false" operator="STARTSWITH" or="true" value="Get SSH Key"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Sensor SSHKey Create</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	gs.debug("Sensor SSHKEY Create");
	
	var xmlDoc = new XMLDocument2();
	xmlDoc.parseXML(current.payload);
	var responseBody = xmlDoc.getNodeText("//result/output");
	var response = JSON.parse(responseBody);
	
	var clientRecord = getClientRecord(current.agent_correlator + "");
	gs.info("Create sshKey response status={0}", response.status);	
	
	if (response.status == "200") {
		if(!gs.nil(clientRecord)){
			gs.debug("set cg_key_id={0}", response.data.businessId);
			clientRecord.setValue("cg_key_id", response.data.businessId);
			clientRecord.update();
		} else {
			gs.error("cannot find the client record for which needs to be updated with cg_key_id");
		}
	} else if(response.status != "200"){
		gs.error(responseBody);
	}

})(current, previous);
		
function getClientRecord(correlator){
	var sys_id = getCommLinkId(correlator);
	gs.debug("Client communication link id={0}", sys_id);
	var clientRecord = new GlideRecord("x_305439_digital_m_communication_links");
	clientRecord.addQuery("sys_id", sys_id);
	clientRecord.query();
	if(clientRecord.next()){
		return clientRecord;
	}
}

function getCommLinkId(correlator){
	if(!gs.nil(correlator)){
		var idIndex = correlator.indexOf("-") + 1;
		return correlator.slice(idIndex);
	} else {
		gs.error("Cannot extract the client communication id from the correlator={0}", correlator);
	}
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-05-20 11:47:14</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>8efb0e954f2977002f86b5e18110c723</sys_id>
        <sys_mod_count>18</sys_mod_count>
        <sys_name>Sensor SSHKey Create</sys_name>
        <sys_overrides/>
        <sys_package display_value="digital-mft" source="x_305439_digital_m">3006e9b44f2323002f86b5e18110c7cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="digital-mft">3006e9b44f2323002f86b5e18110c7cd</sys_scope>
        <sys_update_name>sys_script_8efb0e954f2977002f86b5e18110c723</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-23 14:37:21</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=8efb0e954f2977002f86b5e18110c723"/>
</record_update>
