<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_305439_digital_m.CommProfiles</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>CommProfiles</name>
        <script><![CDATA[var CommProfiles = Class.create();
CommProfiles.prototype = {
    initialize: function() {
    },
	getLinks: function(client_id, server_id){
		try { 
		 var r = new sn_ws.RESTMessageV2('x_305439_digital_m.AMFT-Communication links', 'GET communication links');
		r.setStringParameterNoEscape('client_id', client_id);
		r.setStringParameterNoEscape('server_id', server_id);

		 var response = r.execute();
		 var responseBody = response.getBody();
		 var httpStatus = response.getStatusCode();
		 if(httpStatus != 200){
			gs.error("Failed to get all client communication links; HTTP status: " + httpStatus);
			return;
		 } else if(httpStatus == 200){
			var jsonObj = JSON.parse(responseBody);
			return jsonObj.data;
		 }
		   
		}
		catch(ex) {
		 var message = ex.message;
		}
	},
	uploadCredentials: function(certificate, fileName, passwd, type){
		var certRequest = {};
		certRequest.certificateContent = certificate + "";
		certRequest.name = fileName + "";
		certRequest.isPrivateCertificate = true;
		certRequest.certificatePassword = passwd + "";
		
		var body = JSON.stringify(certRequest);
		gs.info("body: " + body);
		try {
			var method = 'Upload partner certificate';
			if(type == "application"){
				method = 'Upload product certificate';
			}
			 var r = new sn_ws.RESTMessageV2('x_305439_digital_m.AMFT-Certificates', method);
			 r.setRequestBody(body);

			 var response = r.execute();
			 var responseBody = response.getBody();
			 var httpStatus = response.getStatusCode();
			 return (httpStatus == 200);
		}
		catch(ex) {
		 var message = ex.message;
			gs.error(message);
		}
	},
	createServerProfile: function(host, port, certificate_alias, app_name, server_id){
		var serverRequest = {};
		serverRequest.hosts = [host];
		serverRequest.port = port + "";
		serverRequest.certificateAlias = certificate_alias;
		serverRequest.pesitLogin = app_name + "";
		var body = JSON.stringify(serverRequest);
		
		try { 
		 var r = new sn_ws.RESTMessageV2('x_305439_digital_m.AMFT-Communication Servers', 'Create Server profile');
		 r.setStringParameterNoEscape('server_id', server_id);
			r.setRequestBody(body);

		 var response = r.execute();
		 var responseBody = response.getBody();
		 var httpStatus = response.getStatusCode();
			return httpStatus;
		}
		catch(ex) {
		 var message = ex.message;
		}
	},
    type: 'CommProfiles'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-03-28 17:13:48</sys_created_on>
        <sys_id>37aad2984f6433002f86b5e18110c791</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>CommProfiles</sys_name>
        <sys_package display_value="digital-mft" source="x_305439_digital_m">3006e9b44f2323002f86b5e18110c7cd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="digital-mft">3006e9b44f2323002f86b5e18110c7cd</sys_scope>
        <sys_update_name>sys_script_include_37aad2984f6433002f86b5e18110c791</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-04-03 12:38:18</sys_updated_on>
    </sys_script_include>
</record_update>
