<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_305439_digital_m_server_comm_profiles</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Server Profile</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	if(previous.cg_id.nil()){
		gs.debug("[Update Server Profile] skip server profile update. The profile has been just created in CG.");
		return;
	}
	
	var utils = new CommProfiles();
	var comProfilesUtils = new CommProfilesUtils();
	var flowHelper = new FlowUtils();
	var flow_record = getFlowRecord(current);
	
	if(!gs.nil(flow_record)){
		var isPesit = flowHelper.isPesit(flow_record);
		var appName = getApplicationName(flow_record);
		var client_record = comProfilesUtils.getClientProfileFieldSn(flow_record).profile;
		utils.sendAsyncServerProfileUpdate(current, appName, isPesit, client_record.sys_id, current.cg_id);
	} else {
		gs.error("[Update Server Profile] cannot find the flow record to which this profile belongs to. Server communication profile will not be updated.");
	}
	
})(current, previous);

function getFlowRecord(currnet){
	var flow_record = new GlideRecord("x_305439_digital_m_flow_settings");
	var query = flow_record.addQuery("server_profile_1", currnet.sys_id);
	query.addOrCondition("server_profile_1", currnet.sys_id);
	flow_record.query();
	if(flow_record.next()){
		return flow_record;
	}
}

function getApplicationName(flow_record){
	if(gs.getUser().hasRole("x_305439_digital_m.app_sender")){
		return flow_record.source.participant_name;
	} else {
		return flow_record.destination.participant_name;
	}
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-06-07 07:38:32</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>95ef75cb4fb5f7402f86b5e18110c73b</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Update Server Profile</sys_name>
        <sys_overrides/>
        <sys_package display_value="digital-mft" source="x_305439_digital_m">3006e9b44f2323002f86b5e18110c7cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="digital-mft">3006e9b44f2323002f86b5e18110c7cd</sys_scope>
        <sys_update_name>sys_script_95ef75cb4fb5f7402f86b5e18110c73b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-06-07 09:11:11</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=95ef75cb4fb5f7402f86b5e18110c73b"/>
</record_update>
