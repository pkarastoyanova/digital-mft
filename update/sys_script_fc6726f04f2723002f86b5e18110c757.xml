<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>true</action_query>
        <action_update>false</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_305439_digital_m_participants</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update applications</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	 try { 
		 var r = new sn_ws.RESTMessageV2('x_305439_digital_m.AMFT-Applications', 'Get all applications');

		//override authentication profile 
		//authentication type ='basic'/ 'oauth2'
		//r.setAuthentication(authentication type, profile name);

		//set a MID server name if one wants to run the message on MID
		//r.setMIDServer('MY_MID_SERVER');

		//if the message is configured to communicate through ECC queue, either
		//by setting a MID server or calling executeAsync, one needs to set skip_sensor
		//to true. Otherwise, one may get an intermittent error that the response body is null
		//r.setEccParameter('skip_sensor', true);

		 var response = r.execute();
		 var responseBody = response.getBody();
		 var httpStatus = response.getStatusCode();
		 if(httpStatus != 200){
			 gs.error("unable to get all applications.");
			 return;
		 }
		 var jsonObj = JSON.parse(responseBody);
		 jsonObj.data.forEach(function(element) {
			 
			 var businessId = element.businessId;
			 gs.info("businessID: " + businessId);
			 
			 var name = element.applications.name;
			 gs.info("name: " + name);
			 
			 // query the table
			 var g_record = new GlideRecord("x_305439_digital_m_participants");
			 var found = g_record.get("cg_id", businessId);
			 if(found){
				 g_record.setValue("participant_name", name);
				 g_record.update();
			 } else {
				 g_record.setValue("cg_id", businessId);
				 g_record.setValue("participant_name", name);
				 g_record.insert();
			 }
		 });
	}
	catch(ex) {
	 var message = ex.message;
		gs.error(message);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-02-08 14:43:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>fc6726f04f2723002f86b5e18110c757</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Update applications</sys_name>
        <sys_overrides/>
        <sys_package display_value="digital-mft" source="x_305439_digital_m">3006e9b44f2323002f86b5e18110c7cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="digital-mft">3006e9b44f2323002f86b5e18110c7cd</sys_scope>
        <sys_update_name>sys_script_fc6726f04f2723002f86b5e18110c757</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-02-14 09:07:03</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=fc6726f04f2723002f86b5e18110c757"/>
</record_update>
