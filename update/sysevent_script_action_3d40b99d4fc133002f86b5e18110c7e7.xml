<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sysevent_script_action">
    <sysevent_script_action action="INSERT_OR_UPDATE">
        <active>false</active>
        <condition_script/>
        <description/>
        <event_name>attachment.uploaded</event_name>
        <name>handle attachmen upload event</name>
        <order>100</order>
        <script><![CDATA[gs.info("[attachment.uploaded] Triggered attachment.uploaded event handler ...");

try {
	var sftp_client = new GlideRecord("x_305439_digital_m_cp_sftp");
	var attachment = new GlideSysAttachment();
	var attachment_id;
	
	//table_sys_id
	if(current.getTableName() == "sys_attachment"){
		gs.info("[attachment.uploaded] Searching for flow_settings object.. " + current.table_sys_id);
		var flow_settings = new GlideRecord("x_305439_digital_m_flow_settings");
		
		if(flow_settings.get(current.table_sys_id)){
			gs.info("[attachment.uploaded] Found the flow_settings record..");
			if(gs.getUser().hasRole("x_305439_digital_m.app_sender")){
				gs.info("[attachment.uploaded] the user has app_sender role.");
				if(flow_settings.flow_model_name == "PARTNER_SFTP_PUSH_ST_SFTP_PULL_PARTNER"){
					gs.info("[attachment.uploaded] flow_model = PARTNER_SFTP_PUSH_ST_SFTP_PULL_PARTNER");
					sftp_client.get(flow_settings.client_profile_1.sftp_client);
					attachment_id = attachment.writeContentStream(sftp_client, 
																  current.file_name, current.content_type,
																  attachment.getContentStream(current.sys_id));

					sftp_client.setValue("ssh_key", attachment_id);
					sftp_client.setValue("key_alias", current.file_name);
					gs.info("[attachment.uploaded] Created attachment with sys_id: " + attachment_id);
					sftp_client.update();
				}
			} else {
				sftp_client.get(flow_settings.client_profile_2.sftp_client);
				attachment_id = attachment.writeContentStream(sftp_client, 
															  current.file_name, current.content_type, 
															  attachment.getContentStream(current.sys_id));
				sftp_client.setValue("ssh_key", attachment_id);
				sftp_client.setValue("key_alias", current.file_name);
				gs.info("[attachment.uploaded] Created attachment with sys_id: " + attachment_id);
				sftp_client.update();
			}
		}
	}
} catch (ex){
	gs.error("failed to copy attachment: " + ex.message);
}]]></script>
        <synchronous>false</synchronous>
        <sys_class_name>sysevent_script_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-04-25 13:17:19</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3d40b99d4fc133002f86b5e18110c7e7</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>handle attachmen upload event</sys_name>
        <sys_overrides/>
        <sys_package display_value="digital-mft" source="x_305439_digital_m">3006e9b44f2323002f86b5e18110c7cd</sys_package>
        <sys_policy/>
        <sys_scope display_value="digital-mft">3006e9b44f2323002f86b5e18110c7cd</sys_scope>
        <sys_update_name>sysevent_script_action_3d40b99d4fc133002f86b5e18110c7e7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-14 08:36:13</sys_updated_on>
    </sysevent_script_action>
</record_update>
